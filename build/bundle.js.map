{"version":3,"file":"bundle.js","sources":["../Log.js","../module/foundry/config.js","../module/models/actor/components/Profile.js","../module/models/actor/components/SimpleStat.js","../module/models/actor/components/ComplexStat.js","../module/models/actor/components/Attributes.js","../module/models/actor/components/Creation.js","../module/models/actor/components/Karma.js","../module/models/actor/components/Health.js","../module/models/actor/CharacterModel.js","../module/foundry/sheets/CharacterActorSheet.js","../node_modules/svelte/src/version.js","../node_modules/svelte/src/internal/disclose-version.js","../node_modules/svelte/src/constants.js","../node_modules/svelte/src/utils.js","../node_modules/esm-env/false.js","../node_modules/svelte/src/internal/shared/utils.js","../node_modules/svelte/src/internal/client/constants.js","../node_modules/svelte/src/internal/client/errors.js","../node_modules/svelte/src/internal/flags/index.js","../node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/svelte/src/internal/shared/errors.js","../node_modules/svelte/src/internal/client/runtime.js","../node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/svelte/src/internal/client/dom/template.js","../node_modules/svelte/src/internal/client/render.js","../node_modules/svelte/src/index-client.js","../module/foundry/services/getResizeObserver.js","../module/foundry/services/observeMasonryLayout.js","../module/foundry/masonry/masonryInitMain.js","../module/svelte/apps/CharacterSheetApp.svelte","../module/foundry/hooks/renderCharacterActorSheet/onRenderCharacterActorSheet.js","../sr3e.js"],"sourcesContent":["export default class Log {\r\n    static error(message, sender, obj) {\r\n        this._print('‚ùå', 'red', message, sender, obj);\r\n    }\r\n\r\n    static warn(message, sender, obj) {\r\n        this._print('‚ö†Ô∏è', 'orange', message, sender, obj);\r\n    }\r\n\r\n    static info(message, sender, obj) {\r\n        this._print('‚ÑπÔ∏è', 'blue', message, sender, obj);\r\n    }\r\n\r\n    static success(message, sender, obj) {\r\n        this._print('‚úÖ', 'lightgreen', message, sender, obj);\r\n    }\r\n\r\n    static inspect(message, sender, obj) {\r\n        this._print('üîé', 'purple', message, sender, obj);\r\n    }\r\n\r\n    static _print(icon, color, message, sender, obj) {\r\n        const iconStyle = `font-weight: bold; color: ${color};`;\r\n        const sr3eStyle = `font-weight: bold; color: ${color};`;\r\n        const msgStyle = 'color: orange;';\r\n        const senderStyle = `font-weight: bold; color: ${color};`;\r\n\r\n        if (obj !== undefined) {\r\n            console.log(\r\n                `%c${icon} | %csr3e | %c${message} in %c${sender}`,\r\n                iconStyle,\r\n                sr3eStyle,\r\n                msgStyle,\r\n                senderStyle,\r\n                obj\r\n            );\r\n        } else {\r\n            console.log(\r\n                `%c${icon} | %csr3e | %c${message} in %c${sender}`,\r\n                iconStyle,\r\n                sr3eStyle,\r\n                msgStyle,\r\n                senderStyle\r\n            );\r\n        }\r\n    }\r\n}","export const sr3e = {};\r\n\r\nsr3e.test = \"sr3e.test\";\r\n","export default class Profile extends foundry.abstract.TypeDataModel {\r\n  static defineSchema() {\r\n    return {\r\n      names: new foundry.data.fields.ArrayField(\r\n        new foundry.data.fields.SchemaField({\r\n          alias: new foundry.data.fields.StringField({\r\n            required: false,\r\n            initial: \"\",\r\n          }),\r\n        }),\r\n        {\r\n          required: true,\r\n          initial: [],\r\n        }\r\n      ),\r\n\r\n      metaHumanity: new foundry.data.fields.StringField({\r\n        required: false,\r\n        initial: \"\",\r\n      }),\r\n\r\n      // Image\r\n      img: new foundry.data.fields.StringField({\r\n        required: false,\r\n        initial: \"systems/sr3e/textures/ai-generated/humans.webp\",\r\n      }),\r\n\r\n      // Pronouns\r\n      pronouns: new foundry.data.fields.StringField({\r\n        required: false,\r\n        initial: \"Them/They\",\r\n      }),\r\n\r\n      // Age\r\n      age: new foundry.data.fields.NumberField({\r\n        required: false,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n\r\n      // Weight\r\n      weight: new foundry.data.fields.NumberField({\r\n        required: false,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n\r\n      // Height\r\n      height: new foundry.data.fields.NumberField({\r\n        required: false,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n\r\n      // Quote\r\n      quote: new foundry.data.fields.StringField({\r\n        required: false,\r\n        initial: \"Alea iacta es\",\r\n      }),\r\n    };\r\n  }\r\n}","export default class SimpleStat extends foundry.abstract.TypeDataModel {\r\n    static defineSchema() {\r\n      return {\r\n        total: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        value: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        mod: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n      };\r\n    }\r\n  }","import SimpleStat from \"./SimpleStat.js\";\r\n\r\nexport default class ComplexStat extends SimpleStat {\r\n  static defineSchema() {\r\n    return {\r\n      ...super.defineSchema(),\r\n      meta: new foundry.data.fields.NumberField({\r\n        required: true,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import SimpleStat from \"./SimpleStat.js\";\r\nimport ComplexStat from \"./ComplexStat.js\";\r\n\r\nexport default class AttributesModel extends foundry.abstract.TypeDataModel {\r\n  static defineSchema() {\r\n    return {\r\n      // Attributes using ComplexStat (with meta)\r\n      body: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n      quickness: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n      strength: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n      charisma: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n      intelligence: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n      willpower: new foundry.data.fields.SchemaField(ComplexStat.defineSchema()),\r\n\r\n      // Attributes using SimpleStat (without meta)\r\n      initiative: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      reaction: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      magic: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      essence: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n\r\n      // Attributes using SimpleStat (formerly base, now value)\r\n      combat: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      astral: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      hacking: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      control: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      spell: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      walking: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n      running: new foundry.data.fields.SchemaField(SimpleStat.defineSchema()),\r\n    };\r\n  }\r\n}","// src/item/data/components/CreationModel.js\r\n\r\nexport default class Creation extends foundry.abstract.TypeDataModel {\r\n    static defineSchema() {\r\n      return {\r\n        attributePoints: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        activePoints: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        knowledgePoints: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        languagePoints: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n      };\r\n    }\r\n  }\r\n  ","export default class KarmaModel extends foundry.abstract.TypeDataModel {\r\n    static defineSchema() {\r\n      return {\r\n        goodKarma: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        karmaPool: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 1,\r\n          integer: true,\r\n        }),\r\n        lifetimeKarma: new foundry.data.fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true,\r\n        }),\r\n        miraculousSurvival: new foundry.data.fields.BooleanField({\r\n          required: true,\r\n          initial: false,\r\n        }),\r\n      };\r\n    }\r\n  }","export default class HealthModel extends foundry.abstract.TypeDataModel {\r\n  static defineSchema() {\r\n    return {\r\n      stun: new foundry.data.fields.ArrayField(\r\n        new foundry.data.fields.BooleanField({\r\n          required: true,\r\n        }),\r\n        {\r\n          required: true,\r\n          initial: Array(10).fill(false), // Default to 10 false values\r\n        }\r\n      ),\r\n      physical: new foundry.data.fields.ArrayField(\r\n        new foundry.data.fields.BooleanField({\r\n          required: true,\r\n        }),\r\n        {\r\n          required: true,\r\n          initial: Array(10).fill(false), // Default to 10 false values\r\n        }\r\n      ),\r\n      overflow: new foundry.data.fields.NumberField({\r\n        required: true,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n      penalty: new foundry.data.fields.NumberField({ // Fix the typo here\r\n        required: true,\r\n        initial: 0,\r\n        integer: true,\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import Profile from \"./components/Profile.js\";\r\nimport Attributes from \"./components/Attributes.js\";\r\nimport Creation from \"./components/Creation.js\";\r\nimport KarmaModel from \"./components/Karma.js\";\r\nimport HealthModel from \"./components/Health.js\";\r\n\r\nexport default class CharacterModel extends foundry.abstract.TypeDataModel {\r\n  static defineSchema() {\r\n    return {\r\n      attributes: new foundry.data.fields.SchemaField(Attributes.defineSchema()),\r\n      profile: new foundry.data.fields.SchemaField(Profile.defineSchema()),\r\n      creation: new foundry.data.fields.SchemaField(Creation.defineSchema()),\r\n      karma: new foundry.data.fields.SchemaField(KarmaModel.defineSchema()),\r\n      health: new foundry.data.fields.SchemaField(HealthModel.defineSchema()),\r\n      journalEntryUuid: new foundry.data.fields.StringField({\r\n        required: false,\r\n        initial: \"\",\r\n      }),\r\n    };\r\n  }\r\n}","export default class CharacterActorSheet extends ActorSheet {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['sr3e', 'sheet', 'character'],\r\n      template: \"systems/sr3e/templates/sheet/actor/character-sheet.html\"\r\n    });\r\n  }\r\n\r\n  \r\n}","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.19.3';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate ‚Äî we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate ‚Äî we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\tif (parent_derived !== null) {\n\t\t(parent_derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived(derived) {\n\tdestroy_derived_children(derived);\n\tremove_reactions(derived, 0);\n\tset_signal_status(derived, DESTROYED);\n\n\tderived.v = derived.children = derived.deps = derived.ctx = derived.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived, destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null || untracking) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tdestroy_effect_deriveds(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { internal_set, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed ‚Äî we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {number} [depth]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, depth = 0) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t/** @type {Derived} */ (reaction),\n\t\t\t\teffect,\n\t\t\t\tdepth + 1\n\t\t\t);\n\t\t} else if (effect === reaction) {\n\t\t\tif (depth === 0) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\t\tdestroy_effect_deriveds(effect);\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else {\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\t\tvar target = derived;\n\n\t\twhile (parent !== null) {\n\t\t\t// Attach the derived to the nearest parent effect, if there are deriveds\n\t\t\t// in between then we also need to attach them too\n\t\t\tif ((parent.f & DERIVED) !== 0) {\n\t\t\t\tvar parent_derived = /** @type {Derived} */ (parent);\n\n\t\t\t\ttarget = parent_derived;\n\t\t\t\tparent = parent_derived.parent;\n\t\t\t} else {\n\t\t\t\tvar parent_effect = /** @type {Effect} */ (parent);\n\n\t\t\t\tif (!parent_effect.deriveds?.includes(target)) {\n\t\t\t\t\t(parent_effect.deriveds ??= []).push(target);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(signal, d = 1) {\n\tvar value = get(signal);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(signal, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(signal, d = 1) {\n\tvar value = get(signal);\n\n\t// @ts-expect-error\n\treturn set(signal, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case ‚Äî void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true ‚Äî block effects should run their intro transitions ‚Äî\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead ‚Äî see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { hydrate, mount, unmount } from './internal/client/render.js';\n\nexport {\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\tsetContext,\n\ttick,\n\tuntrack\n} from './internal/client/runtime.js';\n\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","export function getResizeObserver(masonryInstance, gridElement, func = null) {\r\n\r\n    gridElement.masonryInstance = masonryInstance;\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n        \r\n        if(func) { \r\n            func(); \r\n        }\r\n        \r\n        masonryInstance.layout();\r\n    });\r\n    \r\n    resizeObserver.observe(gridElement);\r\n\r\n    return resizeObserver;\r\n}","import Log from \"../../../Log.js\";\r\nimport { getResizeObserver } from \"./getResizeObserver.js\";\r\n\r\n/**\r\n * Observes and manages the resizing behavior for the masonry layout.\r\n * Sets up the observer to trigger grid adjustments on resize.\r\n * @param {Object} masonryResizeConfig - Configuration for the masonry layout.\r\n * @returns {ResizeObserver} - The resize observer instance.\r\n */\r\nexport function observeMasonryResize(masonryResizeConfig, isMainGrid = false) {\r\n  const {\r\n    jQueryObject,          // The jQuery object representing the sheet\r\n    parentSelector,\r\n    childSelector,\r\n    gridSizerSelector,\r\n    gutterSizerSelector,\r\n    app\r\n  } = masonryResizeConfig;\r\n\r\n  // For debugging\r\n  Log.inspect(\"Html element 1\", observeMasonryResize.name, jQueryObject);\r\n\r\n  // Use jQuery find (not .querySelector)\r\n  // This gives us another jQuery object, potentially with 1 item\r\n  const $grid = jQueryObject.find(parentSelector);\r\n\r\n  Log.inspect(\"Html element 2 (jQuery grid)\", observeMasonryResize.name, $grid);\r\n\r\n  // Store it back into the config so adjustMasonryOnResize can see it\r\n  masonryResizeConfig.grid = $grid;\r\n\r\n  const rawGrid = $grid[0]; // The raw DOM node\r\n  if (!rawGrid) {\r\n    Log.warn(\"No matching grid found in jQuery object\", observeMasonryResize.name);\r\n    return;\r\n  }\r\n\r\n  // If there's no masonryInstance, create one\r\n  if (!rawGrid.masonryInstance) {\r\n    const masonryInstance = new Masonry(rawGrid, {\r\n      itemSelector: childSelector,\r\n      columnWidth: gridSizerSelector,\r\n      gutter: gutterSizerSelector,\r\n      fitWidth: true\r\n    });\r\n\r\n    rawGrid.masonryInstance = masonryInstance;\r\n\r\n    // Optionally watch layoutComplete\r\n    if (isMainGrid) {\r\n      masonryInstance.on(\"layoutComplete\", function () {\r\n        // do something if needed\r\n      });\r\n    }\r\n\r\n    // The resize callback\r\n    let resizeHandler = () => {\r\n      adjustMasonryOnResize(masonryResizeConfig);\r\n    };\r\n\r\n    // If this is the \"main\" grid, also run the layoutStateMachine\r\n    if (isMainGrid) {\r\n      resizeHandler = () => {\r\n        adjustMasonryOnResize(masonryResizeConfig);\r\n        layoutStateMachine(app, $grid);\r\n      };\r\n    }\r\n\r\n    // Attach the observer\r\n    masonryResizeConfig.observer = getResizeObserver(masonryInstance, rawGrid, resizeHandler);\r\n  }\r\n\r\n  // If we already had a masonry instance, layout again\r\n  if (rawGrid.masonryInstance) {\r\n    rawGrid.masonryInstance.layout();\r\n  }\r\n\r\n  // Start observing changes\r\n  masonryResizeConfig.observer.observe(rawGrid.parentNode);\r\n\r\n  Log.success(\"Masonry Resize Observer Initialized\", observeMasonryResize.name, masonryResizeConfig.observer);\r\n\r\n  return masonryResizeConfig.observer;\r\n}\r\n\r\n/**\r\n * Adjusts grid items within the masonry layout on resize.\r\n * Ensures items fit perfectly within the parent container.\r\n * @param {Object} masonryResizeConfig - Configuration for the masonry layout.\r\n */\r\nexport function adjustMasonryOnResize(masonryResizeConfig) {\r\n  const { grid, childSelector, gridSizerSelector, gutterSizerSelector } = masonryResizeConfig;\r\n  // `grid` is a jQuery object\r\n  if (!grid || !grid.length) return;\r\n\r\n  const $gridItems = grid.find(childSelector);\r\n  const $gridSizer = grid.find(gridSizerSelector);\r\n  const $gutter    = grid.find(gutterSizerSelector);\r\n\r\n  if (!$gridSizer.length || !$gridItems.length) return;\r\n\r\n  // Access the raw DOM nodes\r\n  const rawGrid   = grid[0];\r\n  const rawSizer  = $gridSizer[0];\r\n  const rawGutter = $gutter[0];\r\n\r\n  // Calculate sizes\r\n  const parentPadding   = parseFloat(getComputedStyle(rawGrid.parentNode).paddingLeft) || 0;\r\n  const gridWidthPx     = rawGrid.parentNode.offsetWidth - 2 * parentPadding;\r\n  const gutterPx        = parseFloat(getComputedStyle(rawGutter).width);\r\n  const minItemWidthPx  = parseFloat(getComputedStyle($gridItems[0]).minWidth);\r\n\r\n  // Calculate columns\r\n  let columnCount = Math.floor((gridWidthPx + gutterPx) / (minItemWidthPx + gutterPx));\r\n  columnCount = Math.max(columnCount, 1);\r\n\r\n  // Calculate item width\r\n  const totalGutterWidthPx  = gutterPx * (columnCount - 1);\r\n  const itemWidthPx         = (gridWidthPx - totalGutterWidthPx) / columnCount;\r\n  const adjustedItemWidthPx = Math.floor(itemWidthPx);\r\n\r\n  // Apply the new width to each item\r\n  // jQuery .toArray() -> real array, so we can .forEach\r\n  $gridItems.toArray().forEach((item) => {\r\n    item.style.width = `${adjustedItemWidthPx}px`;\r\n  });\r\n\r\n  // Adjust the grid sizer\r\n  rawSizer.style.width = `${adjustedItemWidthPx}px`;\r\n\r\n  // Trigger layout if we have a masonry instance\r\n  if (rawGrid.masonryInstance) {\r\n    rawGrid.masonryInstance.layout();\r\n  }\r\n}\r\n\r\n/**\r\n * Adjust sheet layout states using a jQuery object.\r\n * @param {ActorSheet} app - The Foundry sheet object\r\n * @param {JQuery} $html - jQuery object for the sheet's main container\r\n */\r\nfunction layoutStateMachine(app, $html) {\r\n  const sheetWidth = app.position?.width || 1400; \r\n  const maxWidth   = 1400;\r\n\r\n  // Layout thresholds\r\n  const lowerLimit  = 0.5 * maxWidth;\r\n  const middleLimit = 0.66 * maxWidth;\r\n\r\n  // Determine layout state\r\n  let layoutState = \"small\";\r\n  if (sheetWidth > middleLimit) {\r\n    layoutState = \"wide\";\r\n  } else if (sheetWidth > lowerLimit) {\r\n    layoutState = \"medium\";\r\n  }\r\n\r\n  // Column widths\r\n  const columnWidthPercent = { small: 100, medium: 50, wide: 25 };\r\n  const columnWidth        = columnWidthPercent[layoutState];\r\n\r\n  // Apply a custom CSS variable on the raw element\r\n  const rawHtml = $html[0]; // raw DOM node\r\n  rawHtml.style.setProperty(\"--column-width\", `${columnWidth}%`);\r\n\r\n  // Grab components with jQuery\r\n  const $twoSpan   = $html.find(\".two-span-selectable\");\r\n  const $threeSpan = $html.find(\".three-span-selectable\");\r\n\r\n  // We can convert them to arrays if we want .forEach:\r\n  const twoSpanArray   = $twoSpan.toArray();\r\n  const threeSpanArray = $threeSpan.toArray();\r\n\r\n  // Adjust widths\r\n  switch (layoutState) {\r\n    case \"small\":\r\n      twoSpanArray.forEach((c) => c.style.width = `var(--column-width)`);\r\n      threeSpanArray.forEach((c) => c.style.width = `var(--column-width)`);\r\n      break;\r\n    case \"medium\":\r\n      twoSpanArray.forEach((c) => c.style.width = `calc(2 * var(--column-width) - 10px)`);\r\n      threeSpanArray.forEach((c) => c.style.width = `var(--column-width)`);\r\n      break;\r\n    case \"wide\":\r\n      twoSpanArray.forEach((c) => c.style.width = `calc(2 * var(--column-width) - 10px)`);\r\n      threeSpanArray.forEach((c) => c.style.width = `calc(3 * var(--column-width) - 20px)`);\r\n      break;\r\n  }\r\n}","import { observeMasonryResize } from \"../services/observeMasonryLayout.js\";\r\n\r\nexport function initializeMasonryLayout(masonryResizeConfig) {\r\n\r\n    const actor = masonryResizeConfig.app.actor;\r\n\r\n    if (actor.mainLayoutResizeObserver) {\r\n        actor.mainLayoutResizeObserver.disconnect();\r\n        actor.mainLayoutResizeObserver = null;\r\n    }\r\n\r\n    actor.mainLayoutResizeObserver?.disconnect();\r\n    actor.mainLayoutResizeObserver = observeMasonryResize(masonryResizeConfig, true);\r\n}","<script>\r\n  \r\n  import { onMount } from \"svelte\";\r\n  import Log from \"../../../Log.js\";\r\n  import { initializeMasonryLayout } from \"../../foundry/masonry/masonryInitMain.js\";\r\n\r\n  let { app, config, jQueryObject } = $props();\r\n  \r\n  let actor = app.actor;\r\n  let name = actor?.name || \"Unknown Actor\";\r\n  let test = game.i18n.localize(config.test);\r\n\r\n  onMount(() => {\r\n    \r\n    const args = {\r\n      jQueryObject: jQueryObject,\r\n      parentSelector: \".character-sheet-masonry\",\r\n      childSelector: \".sheet-component\",\r\n      gridSizerSelector: \".layout-grid-sizer\",\r\n      gutterSizerSelector: \".layout-gutter-sizer\",\r\n      observer: actor.mainLayoutResizeObserver,\r\n      app: app,\r\n    };\r\n\r\n    initializeMasonryLayout(args, true);\r\n\r\n    Log.success(\"Masonry layout initialized\", \"CharacterSheetApp.svelte\");\r\n  });\r\n</script>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component two-span-selectable\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sheet-component\">\r\n    <div class=\"inner-background-container\">\r\n      <div class=\"fake-shadow\"></div>\r\n      <div class=\"inner-background\">\r\n        <h1>{test}</h1>\r\n        Testing Databind\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n","import Log from \"../../../../Log\";\r\nimport CharacterActorSheet from \"../../sheets/CharacterActorSheet.js\";\r\nimport CharacterSheetApp from \"../../../svelte/apps/CharacterSheetApp.svelte\";\r\nimport { mount } from \"svelte\";\r\n\r\nexport function initMainMasonryGrid(app, html, data) {\r\n  if (!(app instanceof CharacterActorSheet)) return;\r\n\r\n  Log.info(\"Initialize\", CharacterActorSheet.name);\r\n\r\n\r\n  const container = document.querySelector(\".window-content\");\r\n\r\n  container.innerHTML = '';\r\n\r\n  app.svelteApp = mount(CharacterSheetApp, {\r\n      target: container,\r\n      props: {\r\n        app: app,\r\n        config: CONFIG.sr3e,\r\n        jQueryObject: html\r\n      },\r\n    });\r\n\r\n  Log.success(\"Svelte App Initialized\", CharacterActorSheet.name);\r\n}\r\n\r\nexport function closeMainMasonryGrid(app) {\r\n  if (!(app instanceof CharacterActorSheet)) return;\r\n\r\n  if (app.svelteApp) {\r\n    console.info(\"Actor\", CharacterActorSheet.name, app.actor.mainLayoutResizeObserver);\r\n\r\n    app.actor.mainLayoutResizeObserver?.disconnect();\r\n    app.actor.mainLayoutResizeObserver = null;\r\n\r\n    console.info(\"Masonry observer disconnected.\", CharacterActorSheet.name);\r\n    app.svelteApp.$destroy();\r\n    app.svelteApp = null;\r\n\r\n    console.info(\"Svelte App Destroyed.\", CharacterActorSheet.name);\r\n  }\r\n}","import Log from \"./Log.js\";\r\nimport { sr3e } from \"./module/foundry/config.js\";\r\nimport CharacterModel from \"./module/models/actor/CharacterModel.js\";\r\nimport CharacterActorSheet from \"./module/foundry/sheets/CharacterActorSheet.js\";\r\nimport {\r\n  closeMainMasonryGrid,\r\n  initMainMasonryGrid\r\n} from \"./module/foundry/hooks/renderCharacterActorSheet/onRenderCharacterActorSheet.js\";\r\n\r\nconst hooks = {\r\n  renderCharacterActorSheet: \"renderCharacterActorSheet\",\r\n  closeCharacterActorSheet: \"closeCharacterActorSheet\",\r\n  init: \"init\",\r\n  ready: \"ready\"\r\n}\r\n\r\nfunction registerHooks() {\r\n\r\n  Hooks.on(hooks.renderCharacterActorSheet, initMainMasonryGrid);\r\n  Hooks.on(hooks.closeCharacterActorSheet, closeMainMasonryGrid);\r\n\r\n  Hooks.on(\"renderActorSheet\", (app, html, data) => {\r\n    console.log(\"‚úÖ Hook Fired: renderActorSheet\", {\r\n      actor: app.actor,\r\n      sheet: app.constructor.name,\r\n      actorType: app.actor.type,\r\n    });\r\n  });\r\n\r\n  Hooks.on(\"renderActorSheet\", (app) => {\r\n    console.log(\"Actor type:\", app.actor.type); // Should output \"character\"\r\n  });\r\n\r\n  Hooks.on(\"renderCharacterActorSheet\", (app, html, data) => {\r\n    console.log(\"‚úÖ Hook Fired: renderCharacterActorSheet\", {\r\n      actor: app.actor,\r\n      sheet: app.constructor.name,\r\n      actorType: app.actor.type,\r\n    });\r\n  });\r\n  \r\n\r\n  Hooks.once(hooks.init, () => {\r\n\r\n    console.log(\"‚úÖ INIT Hook Fired: Registering Custom Sheets\");\r\n\r\n    CONFIG.sr3e = sr3e;\r\n\r\n    Actors.unregisterSheet(\"core\", ActorSheet);\r\n\r\n    CONFIG.Actor.dataModels = {\r\n      \"character\": CharacterModel,\r\n    };\r\n\r\n    Actors.registerSheet(\"sr3e\", CharacterActorSheet, { types: [\"character\"], makeDefault: true });\r\n\r\n    Log.success(\"Hooks Registered\", \"sr3e.js\");\r\n    Log.success(\"Initialization Completed\", \"sr3e.js\");\r\n\r\n  });\r\n}\r\n\r\nregisterHooks();"],"names":["Attributes","child","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","effect","push","sibling","component_context","e.effect_update_depth_exceeded","events"],"mappings":"AAAe,MAAM,IAAI;AAAA,EACrB,OAAO,MAAM,SAAS,QAAQ,KAAK;AAC/B,SAAK,OAAO,KAAK,OAAO,SAAS,QAAQ,GAAG;AAAA,EAC/C;AAAA,EAED,OAAO,KAAK,SAAS,QAAQ,KAAK;AAC9B,SAAK,OAAO,MAAM,UAAU,SAAS,QAAQ,GAAG;AAAA,EACnD;AAAA,EAED,OAAO,KAAK,SAAS,QAAQ,KAAK;AAC9B,SAAK,OAAO,MAAM,QAAQ,SAAS,QAAQ,GAAG;AAAA,EACjD;AAAA,EAED,OAAO,QAAQ,SAAS,QAAQ,KAAK;AACjC,SAAK,OAAO,KAAK,cAAc,SAAS,QAAQ,GAAG;AAAA,EACtD;AAAA,EAED,OAAO,QAAQ,SAAS,QAAQ,KAAK;AACjC,SAAK,OAAO,MAAM,UAAU,SAAS,QAAQ,GAAG;AAAA,EACnD;AAAA,EAED,OAAO,OAAO,MAAM,OAAO,SAAS,QAAQ,KAAK;AAC7C,UAAM,YAAY,6BAA6B,KAAK;AACpD,UAAM,YAAY,6BAA6B,KAAK;AACpD,UAAM,WAAW;AACjB,UAAM,cAAc,6BAA6B,KAAK;AAEtD,QAAI,QAAQ,QAAW;AACnB,cAAQ;AAAA,QACJ,KAAK,IAAI,iBAAiB,OAAO,SAAS,MAAM;AAAA,QAChD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAChB;AAAA,IACA,OAAe;AACH,cAAQ;AAAA,QACJ,KAAK,IAAI,iBAAiB,OAAO,SAAS,MAAM;AAAA,QAChD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAChB;AAAA,IACS;AAAA,EACJ;AACL;AC9CO,MAAM,OAAO,CAAA;AAEpB,KAAK,OAAO;ACFG,MAAM,gBAAgB,QAAQ,SAAS,cAAc;AAAA,EAClE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,OAAO,IAAI,QAAQ,KAAK,OAAO;AAAA,QAC7B,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,UAClC,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,YACzC,UAAU;AAAA,YACV,SAAS;AAAA,UACrB,CAAW;AAAA,QACX,CAAS;AAAA,QACD;AAAA,UACE,UAAU;AAAA,UACV,SAAS,CAAE;AAAA,QACZ;AAAA,MACF;AAAA,MAED,cAAc,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAChD,UAAU;AAAA,QACV,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,KAAK,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACvC,UAAU;AAAA,QACV,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC5C,UAAU;AAAA,QACV,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,KAAK,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACvC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,QAAQ,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC1C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,QAAQ,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC1C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA;AAAA,MAGD,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACzC,UAAU;AAAA,QACV,SAAS;AAAA,MACjB,CAAO;AAAA,IACP;AAAA,EACG;AACH;AC7De,MAAM,mBAAmB,QAAQ,SAAS,cAAc;AAAA,EACnE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACzC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACzC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,KAAK,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACvC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,IACT;AAAA,EACK;AACL;AClBe,MAAM,oBAAoB,WAAW;AAAA,EAClD,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,GAAG,MAAM,aAAc;AAAA,MACvB,MAAM,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACxC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA,IACP;AAAA,EACG;AACH;ACVe,MAAM,wBAAwB,QAAQ,SAAS,cAAc;AAAA,EAC1E,OAAO,eAAe;AACpB,WAAO;AAAA;AAAA,MAEL,MAAM,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MACpE,WAAW,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MACzE,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MACxE,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MACxE,cAAc,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MAC5E,WAAW,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA;AAAA,MAGzE,YAAY,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACzE,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACvE,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACpE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA;AAAA,MAGtE,QAAQ,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACrE,QAAQ,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACrE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACtE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACtE,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACpE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACtE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,IAC5E;AAAA,EACG;AACH;AC5Be,MAAM,iBAAiB,QAAQ,SAAS,cAAc;AAAA,EACjE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,iBAAiB,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACnD,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,cAAc,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAChD,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,iBAAiB,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACnD,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,gBAAgB,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAClD,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,IACT;AAAA,EACK;AACL;AC3Be,MAAM,mBAAmB,QAAQ,SAAS,cAAc;AAAA,EACnE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,WAAW,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC7C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,WAAW,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC7C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,eAAe,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACjD,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACnB,CAAS;AAAA,MACD,oBAAoB,IAAI,QAAQ,KAAK,OAAO,aAAa;AAAA,QACvD,UAAU;AAAA,QACV,SAAS;AAAA,MACnB,CAAS;AAAA,IACT;AAAA,EACK;AACL;ACxBe,MAAM,oBAAoB,QAAQ,SAAS,cAAc;AAAA,EACtE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,MAAM,IAAI,QAAQ,KAAK,OAAO;AAAA,QAC5B,IAAI,QAAQ,KAAK,OAAO,aAAa;AAAA,UACnC,UAAU;AAAA,QACpB,CAAS;AAAA,QACD;AAAA,UACE,UAAU;AAAA,UACV,SAAS,MAAM,EAAE,EAAE,KAAK,KAAK;AAAA;AAAA,QAC9B;AAAA,MACF;AAAA,MACD,UAAU,IAAI,QAAQ,KAAK,OAAO;AAAA,QAChC,IAAI,QAAQ,KAAK,OAAO,aAAa;AAAA,UACnC,UAAU;AAAA,QACpB,CAAS;AAAA,QACD;AAAA,UACE,UAAU;AAAA,UACV,SAAS,MAAM,EAAE,EAAE,KAAK,KAAK;AAAA;AAAA,QAC9B;AAAA,MACF;AAAA,MACD,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QAC5C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA,MACD,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA;AAAA,QAC3C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA,IACP;AAAA,EACG;AACH;AC3Be,MAAM,uBAAuB,QAAQ,SAAS,cAAc;AAAA,EACzE,OAAO,eAAe;AACpB,WAAO;AAAA,MACL,YAAY,IAAI,QAAQ,KAAK,OAAO,YAAYA,gBAAW,cAAc;AAAA,MACzE,SAAS,IAAI,QAAQ,KAAK,OAAO,YAAY,QAAQ,cAAc;AAAA,MACnE,UAAU,IAAI,QAAQ,KAAK,OAAO,YAAY,SAAS,cAAc;AAAA,MACrE,OAAO,IAAI,QAAQ,KAAK,OAAO,YAAY,WAAW,cAAc;AAAA,MACpE,QAAQ,IAAI,QAAQ,KAAK,OAAO,YAAY,YAAY,cAAc;AAAA,MACtE,kBAAkB,IAAI,QAAQ,KAAK,OAAO,YAAY;AAAA,QACpD,UAAU;AAAA,QACV,SAAS;AAAA,MACjB,CAAO;AAAA,IACP;AAAA,EACG;AACH;ACpBe,MAAM,4BAA4B,WAAW;AAAA,EAC1D,WAAW,iBAAiB;AAC1B,WAAO,QAAQ,MAAM,YAAY,MAAM,gBAAgB;AAAA,MACrD,SAAS,CAAC,QAAQ,SAAS,WAAW;AAAA,MACtC,UAAU;AAAA,IAChB,CAAK;AAAA,EACF;AAGH;ACFO,MAAM,iBAAiB;ACL9B,IAAI,OAAO,WAAW;AAErB,GAAC,OAAO,aAAP,OAAO,WAAa,EAAE,GAAG,oBAAI,IAAG,MAAM,EAAE,IAAI,cAAc;ACcrD,MAAM,2BAA2B,KAAK;ACmP7C,MAAM,iBAAiB,CAAC,cAAc,WAAW;AAM1C,SAAS,iBAAiB,MAAM;AACtC,SAAO,eAAe,SAAS,IAAI;AACpC;AC7QA,MAAA,MAAe;ACER,IAAI,WAAW,MAAM;AACrB,IAAI,WAAW,MAAM,UAAU;AAC/B,IAAI,aAAa,MAAM;AAEvB,IAAI,kBAAkB,OAAO;AAC7B,IAAI,iBAAiB,OAAO;ACP5B,MAAM,UAAU,KAAK;AACrB,MAAM,SAAS,KAAK;AACpB,MAAM,gBAAgB,KAAK;AAC3B,MAAM,eAAe,KAAK;AAC1B,MAAM,gBAAgB,KAAK;AAC3B,MAAM,cAAc,KAAK;AACzB,MAAM,kBAAkB,KAAK;AAC7B,MAAM,UAAU,KAAK;AACrB,MAAM,eAAe,KAAK;AAC1B,MAAM,QAAQ,KAAK;AACnB,MAAM,QAAQ,KAAK;AACnB,MAAM,cAAc,KAAK;AACzB,MAAM,QAAQ,KAAK;AACnB,MAAM,YAAY,KAAK;AACvB,MAAM,aAAa,KAAK;AAExB,MAAM,qBAAqB,KAAK;AAIhC,MAAM,cAAc,KAAK;AACzB,MAAM,qBAAqB,KAAK;AC2GhC,SAAS,mBAAmB,MAAM;AAMjC;AACN,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA;AAMO,SAAS,4BAA4B;AAMpC;AACN,UAAM,IAAI,MAAM,gDAAgD;AAAA,EAClE;AACA;AAOO,SAAS,cAAc,MAAM;AAM5B;AACN,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AACA;AAMO,SAAS,+BAA+B;AAMvC;AACN,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACrE;AACA;ACtLO,IAAI,oBAAoB;ACOxB,IAAI;AAMX,IAAI;AAEJ,IAAI;AAMG,SAAS,kBAAkB;AACjC,MAAI,YAAY,QAAW;AAC1B;AAAA,EACF;AAEC,YAAU;AAGV,MAAI,oBAAoB,QAAQ;AAChC,MAAI,iBAAiB,KAAK;AAG1B,uBAAqB,eAAe,gBAAgB,YAAY,EAAE;AAElE,wBAAsB,eAAe,gBAAgB,aAAa,EAAE;AAIpE,oBAAkB,UAAU;AAE5B,oBAAkB,cAAc;AAEhC,oBAAkB,eAAe;AAEjC,oBAAkB,WAAW;AAE7B,oBAAkB,MAAM;AAGxB,OAAK,UAAU,MAAM;AAQtB;AAMO,SAAS,YAAY,QAAQ,IAAI;AACvC,SAAO,SAAS,eAAe,KAAK;AACrC;AAAA;AAQO,SAAS,gBAAgB,MAAM;AACrC,SAAO,mBAAmB,KAAK,IAAI;AACpC;AAAA;AAQO,SAAS,iBAAiB,MAAM;AACtC,SAAO,oBAAoB,KAAK,IAAI;AACrC;AASO,SAAS,MAAM,MAAM,SAAS;AACpB;AACf,WAAO,gCAAgB,IAAI;AAAA,EAC7B;AAgBA;AAQO,SAAS,YAAY,UAAU,SAAS;AAC9B;AAEf,QAAI;AAAA;AAAA,MAAyC;AAAA;AAAA,QAAqC;AAAA;;AAGlF,QAAI,iBAAiB,WAAW,MAAM,SAAS,GAAI,QAAO,iCAAiB,KAAK;AAEhF,WAAO;AAAA,EACT;AAaA;AASO,SAAS,QAAQ,MAAM,QAAQ,GAAG,UAAU,OAAO;AACzD,MAAI,eAA0C;AAG9C,SAAO,SAAS;AAEf;AAAA,IAA4C,iCAAiB,YAAY;AAAA,EAC3E;AAEiB;AACf,WAAO;AAAA,EACT;AAsBA;AC9FA,SAAS,yBAAyB,SAAS;AAC1C,MAAI,WAAW,QAAQ;AAEvB,MAAI,aAAa,MAAM;AACtB,YAAQ,WAAW;AAEnB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC5C,UAAIC,SAAQ,SAAS,CAAC;AACtB,WAAKA,OAAM,IAAI,aAAa,GAAG;AAC9B;AAAA;AAAA,UAAwCA;AAAA,QAAO;AAAA,MACnD,OAAU;AACN;AAAA;AAAA,UAAsCA;AAAA,QAAO;AAAA,MACjD;AAAA,IACA;AAAA,EACA;AACA;AAaA,SAAS,0BAA0B,SAAS;AAC3C,MAAI,SAAS,QAAQ;AACrB,SAAO,WAAW,MAAM;AACvB,SAAK,OAAO,IAAI,aAAa,GAAG;AAC/B;AAAA;AAAA,QAA8B;AAAA;AAAA,IACjC;AACE,aAAS,OAAO;AAAA,EAClB;AACC,SAAO;AACR;AAOO,SAAS,gBAAgB,SAAS;AACxC,MAAI;AACJ,MAAI,qBAAqB;AAEzB,oBAAkB,0BAA0B,OAAO,CAAC;AAmB7C;AACN,QAAI;AACH,+BAAyB,OAAO;AAChC,cAAQ,gBAAgB,OAAO;AAAA,IAClC,UAAY;AACT,wBAAkB,kBAAkB;AAAA,IACvC;AAAA,EACA;AAEC,SAAO;AACR;AAMO,SAAS,eAAe,SAAS;AACvC,MAAI,QAAQ,gBAAgB,OAAO;AACnC,MAAI,UACF,kBAAkB,QAAQ,IAAI,aAAa,MAAM,QAAQ,SAAS,OAAO,cAAc;AAEzF,oBAAkB,SAAS,MAAM;AAEjC,MAAI,CAAC,QAAQ,OAAO,KAAK,GAAG;AAC3B,YAAQ,IAAI;AACZ,YAAQ,KAAK,wBAAyB;AAAA,EACxC;AACA;AAMO,SAAS,gBAAgB,SAAS;AACxC,2BAAyB,OAAO;AAChC,mBAAiB,SAAS,CAAC;AAC3B,oBAAkB,SAAS,SAAS;AAEpC,UAAQ,IAAI,QAAQ,WAAW,QAAQ,OAAO,QAAQ,MAAM,QAAQ,YAAY;AACjF;ACpJO,SAAS,gBAAgB,MAAM;AACrC,MAAI,kBAAkB,QAAQ,oBAAoB,MAAM;AACvDC,kBAAoB;AAAA,EACtB;AAEC,MAAI,oBAAoB,SAAS,gBAAgB,IAAI,aAAa,GAAG;AACpEC,8BAA6B;AAAA,EAC/B;AAEC,MAAI,sBAAsB;AACzBC,uBAAyB;AAAA,EAC3B;AACA;AAMA,SAAS,YAAYC,SAAQ,eAAe;AAC3C,MAAI,cAAc,cAAc;AAChC,MAAI,gBAAgB,MAAM;AACzB,kBAAc,OAAO,cAAc,QAAQA;AAAA,EAC7C,OAAQ;AACN,gBAAY,OAAOA;AACnB,IAAAA,QAAO,OAAO;AACd,kBAAc,OAAOA;AAAA,EACvB;AACA;AASA,SAAS,cAAc,MAAM,IAAI,MAAMC,QAAO,MAAM;AACnD,MAAI,WAAW,OAAO,iBAAiB;AACvC,MAAI,gBAAgB;AAUpB,MAAID,UAAS;AAAA,IACZ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,IACV,aAAa;AAAA,IACb,WAAW;AAAA,IACX,GAAG,OAAO;AAAA,IACV,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ,UAAU,OAAO;AAAA,IACzB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,aAAa;AAAA,IACb,IAAI;AAAA,EACJ;AAMD,MAAI,MAAM;AACT,QAAI,6BAA6B;AAEjC,QAAI;AACH,6BAAuB,IAAI;AAC3B,oBAAcA,OAAM;AACpB,MAAAA,QAAO,KAAK;AAAA,IACZ,SAAQ,GAAG;AACX,qBAAeA,OAAM;AACrB,YAAM;AAAA,IACT,UAAY;AACT,6BAAuB,0BAA0B;AAAA,IACpD;AAAA,EACA,WAAY,OAAO,MAAM;AACvB,oBAAgBA,OAAM;AAAA,EACxB;AAIC,MAAI,QACH,QACAA,QAAO,SAAS,QAChBA,QAAO,UAAU,QACjBA,QAAO,gBAAgB,QACvBA,QAAO,aAAa,SACnBA,QAAO,KAAK,qBAAqB,sBAAsB;AAEzD,MAAI,CAAC,SAAS,CAAC,WAAWC,OAAM;AAC/B,QAAI,kBAAkB,MAAM;AAC3B,kBAAYD,SAAQ,aAAa;AAAA,IACpC;AAGE,QAAI,oBAAoB,SAAS,gBAAgB,IAAI,aAAa,GAAG;AACpE,UAAI;AAAA;AAAA,QAAkC;AAAA;AACtC,OAAC,QAAQ,aAAR,QAAQ,WAAa,KAAI,KAAKA,OAAM;AAAA,IACxC;AAAA,EACA;AAEC,SAAOA;AACR;AA8BO,SAAS,YAAY,IAAI;AAC/B,kBAAyB;AAIzB,MAAI,QACH,kBAAkB,SACjB,cAAc,IAAI,mBAAmB,KACtC,sBAAsB,QACtB,CAAC,kBAAkB;AAQpB,MAAI,OAAO;AACV,QAAI;AAAA;AAAA,MAA2C;AAAA;AAC/C,KAAC,QAAQ,MAAR,QAAQ,IAAM,CAAE,IAAE,KAAK;AAAA,MACvB;AAAA,MACA,QAAQ;AAAA,MACR,UAAU;AAAA,IACb,CAAG;AAAA,EACH,OAAQ;AACN,QAAI,SAAS,OAAO,EAAE;AACtB,WAAO;AAAA,EACT;AACA;AAwCO,SAAS,eAAe,IAAI;AAClC,QAAMA,UAAS,cAAc,aAAa,IAAI,IAAI;AAElD,SAAO,CAAC,UAAU,OAAO;AACxB,WAAO,IAAI,QAAQ,CAAC,WAAW;AAC9B,UAAI,QAAQ,OAAO;AAClB,qBAAaA,SAAQ,MAAM;AAC1B,yBAAeA,OAAM;AACrB,iBAAO,MAAS;AAAA,QACrB,CAAK;AAAA,MACL,OAAU;AACN,uBAAeA,OAAM;AACrB,eAAO,MAAS;AAAA,MACpB;AAAA,IACA,CAAG;AAAA,EACD;AACF;AAMO,SAAS,OAAO,IAAI;AAC1B,SAAO,cAAc,QAAQ,IAAI,KAAK;AACvC;AA4FO,SAAS,OAAO,IAAIC,QAAO,MAAM;AACvC,SAAO,cAAc,gBAAgB,eAAe,IAAI,MAAMA,KAAI;AACnE;AAKO,SAAS,wBAAwBD,SAAQ;AAC/C,MAAI,WAAWA,QAAO;AACtB,MAAI,aAAa,MAAM;AACtB,UAAM,+BAA+B;AACrC,UAAM,oBAAoB;AAC1B,6BAAyB,IAAI;AAC7B,wBAAoB,IAAI;AACxB,QAAI;AACH,eAAS,KAAK,IAAI;AAAA,IACrB,UAAY;AACT,+BAAyB,4BAA4B;AACrD,0BAAoB,iBAAiB;AAAA,IACxC;AAAA,EACA;AACA;AAMO,SAAS,wBAAwB,QAAQ;AAC/C,MAAI,WAAW,OAAO;AAEtB,MAAI,aAAa,MAAM;AACtB,WAAO,WAAW;AAElB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC5C,sBAAgB,SAAS,CAAC,CAAC;AAAA,IAC9B;AAAA,EACA;AACA;AAOO,SAAS,wBAAwB,QAAQ,aAAa,OAAO;AACnE,MAAIA,UAAS,OAAO;AACpB,SAAO,QAAQ,OAAO,OAAO;AAE7B,SAAOA,YAAW,MAAM;AACvB,QAAI,OAAOA,QAAO;AAClB,mBAAeA,SAAQ,UAAU;AACjC,IAAAA,UAAS;AAAA,EACX;AACA;AAMO,SAAS,8BAA8B,QAAQ;AACrD,MAAIA,UAAS,OAAO;AAEpB,SAAOA,YAAW,MAAM;AACvB,QAAI,OAAOA,QAAO;AAClB,SAAKA,QAAO,IAAI,mBAAmB,GAAG;AACrC,qBAAeA,OAAM;AAAA,IACxB;AACE,IAAAA,UAAS;AAAA,EACX;AACA;AAOO,SAAS,eAAeA,SAAQ,aAAa,MAAM;AACzD,MAAI,UAAU;AAEd,OAAK,eAAeA,QAAO,IAAI,iBAAiB,MAAMA,QAAO,gBAAgB,MAAM;AAElF,QAAI,OAAOA,QAAO;AAClB,QAAI,MAAMA,QAAO;AAEjB,WAAO,SAAS,MAAM;AAErB,UAAI,OAAO,SAAS,MAAM;AAAA;AAAA,QAAoC,iCAAiB,IAAI;AAAA;AAEnF,WAAK,OAAQ;AACb,aAAO;AAAA,IACV;AAEE,cAAU;AAAA,EACZ;AAEC,0BAAwBA,SAAQ,cAAc,CAAC,OAAO;AACtD,0BAAwBA,OAAM;AAC9B,mBAAiBA,SAAQ,CAAC;AAC1B,oBAAkBA,SAAQ,SAAS;AAEnC,MAAI,cAAcA,QAAO;AAEzB,MAAI,gBAAgB,MAAM;AACzB,eAAW,cAAc,aAAa;AACrC,iBAAW,KAAM;AAAA,IACpB;AAAA,EACA;AAEC,0BAAwBA,OAAM;AAE9B,MAAI,SAASA,QAAO;AAGpB,MAAI,WAAW,QAAQ,OAAO,UAAU,MAAM;AAC7C,kBAAcA,OAAM;AAAA,EACtB;AAQC,EAAAA,QAAO,OACNA,QAAO,OACPA,QAAO,WACPA,QAAO,MACPA,QAAO,OACPA,QAAO,KACPA,QAAO,cACPA,QAAO,YACN;AACH;AAOO,SAAS,cAAcA,SAAQ;AACrC,MAAI,SAASA,QAAO;AACpB,MAAI,OAAOA,QAAO;AAClB,MAAI,OAAOA,QAAO;AAElB,MAAI,SAAS,KAAM,MAAK,OAAO;AAC/B,MAAI,SAAS,KAAM,MAAK,OAAO;AAE/B,MAAI,WAAW,MAAM;AACpB,QAAI,OAAO,UAAUA,QAAQ,QAAO,QAAQ;AAC5C,QAAI,OAAO,SAASA,QAAQ,QAAO,OAAO;AAAA,EAC5C;AACA;AAWO,SAAS,aAAaA,SAAQ,UAAU;AAE9C,MAAI,cAAc,CAAE;AAEpB,iBAAeA,SAAQ,aAAa,IAAI;AAExC,sBAAoB,aAAa,MAAM;AACtC,mBAAeA,OAAM;AACP,aAAU;AAAA,EAC1B,CAAE;AACF;AAMO,SAAS,oBAAoB,aAAa,IAAI;AACpD,MAAI,YAAY,YAAY;AAC5B,MAAI,YAAY,GAAG;AAClB,QAAI,QAAQ,MAAM,EAAE,aAAa,GAAI;AACrC,aAAS,cAAc,aAAa;AACnC,iBAAW,IAAI,KAAK;AAAA,IACvB;AAAA,EACA,OAAQ;AACN,OAAI;AAAA,EACN;AACA;AAOO,SAAS,eAAeA,SAAQ,aAAa,OAAO;AAC1D,OAAKA,QAAO,IAAI,WAAW,EAAG;AAC9B,EAAAA,QAAO,KAAK;AAEZ,MAAIA,QAAO,gBAAgB,MAAM;AAChC,eAAW,cAAcA,QAAO,aAAa;AAC5C,UAAI,WAAW,aAAa,OAAO;AAClC,oBAAY,KAAK,UAAU;AAAA,MAC/B;AAAA,IACA;AAAA,EACA;AAEC,MAAIJ,SAAQI,QAAO;AAEnB,SAAOJ,WAAU,MAAM;AACtB,QAAIM,WAAUN,OAAM;AACpB,QAAI,eAAeA,OAAM,IAAI,wBAAwB,MAAMA,OAAM,IAAI,mBAAmB;AAIxF,mBAAeA,QAAO,aAAa,cAAc,QAAQ,KAAK;AAC9D,IAAAA,SAAQM;AAAA,EACV;AACA;ACzjBO,SAAS,4BAA4B,MAAM;AAM1C;AACN,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACpE;AACA;ACWO,IAAI,oBAAoB;AAK/B,IAAI,uBAAuB;AAG3B,IAAI,wBAAwB;AAErB,IAAI,qBAAqB;AACzB,IAAI,uBAAuB;AAG3B,SAAS,uBAAuB,OAAO;AAC7C,uBAAqB;AACtB;AAGO,SAAS,yBAAyB,OAAO;AAC/C,yBAAuB;AACxB;AAKA,IAAI,sBAAsB,CAAE;AAE5B,IAAI,cAAc;AAElB,IAAI,mBAAmB,CAAE;AAIlB,IAAI,kBAAkB;AAEtB,IAAI,aAAa;AAGjB,SAAS,oBAAoB,UAAU;AAC7C,oBAAkB;AACnB;AAGO,IAAI,gBAAgB;AAGpB,SAAS,kBAAkBF,SAAQ;AACzC,kBAAgBA;AACjB;AAsBO,IAAI,WAAW;AAEtB,IAAI,eAAe;AAOZ,IAAI,mBAAmB;AAW9B,IAAI,gBAAgB;AAGpB,IAAI,eAAe;AAIZ,IAAI,gBAAgB;AAYpB,IAAI,oBAAoB;AAwBxB,SAAS,0BAA0B;AACzC,SAAO,EAAE;AACV;AAGO,SAAS,WAAW;AAC1B,SAAO;AACR;AAQO,SAAS,gBAAgB,UAAU;AxBjM3B;AwBkMd,MAAI,QAAQ,SAAS;AAErB,OAAK,QAAQ,WAAW,GAAG;AAC1B,WAAO;AAAA,EACT;AAEC,OAAK,QAAQ,iBAAiB,GAAG;AAChC,QAAI,eAAe,SAAS;AAC5B,QAAI,cAAc,QAAQ,aAAa;AAEvC,QAAI,iBAAiB,MAAM;AAC1B,UAAI;AACJ,UAAI;AACJ,UAAI,mBAAmB,QAAQ,kBAAkB;AACjD,UAAI,uBAAuB,cAAc,kBAAkB,QAAQ,CAAC;AACpE,UAAI,SAAS,aAAa;AAI1B,UAAI,mBAAmB,sBAAsB;AAC5C,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC5B,uBAAa,aAAa,CAAC;AAI3B,cAAI,mBAAmB,GAAC,8CAAY,cAAZ,mBAAuB,SAAS,YAAW;AAClE,aAAC,WAAW,cAAX,WAAW,YAAc,KAAI,KAAK,QAAQ;AAAA,UACjD;AAAA,QACA;AAEI,YAAI,iBAAiB;AACpB,mBAAS,KAAK;AAAA,QACnB;AAAA,MACA;AAEG,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC5B,qBAAa,aAAa,CAAC;AAE3B,YAAI;AAAA;AAAA,UAAwC;AAAA,WAAc;AACzD;AAAA;AAAA,YAAuC;AAAA,UAAY;AAAA,QACxD;AAEI,YAAI,WAAW,KAAK,SAAS,IAAI;AAChC,iBAAO;AAAA,QACZ;AAAA,MACA;AAAA,IACA;AAIE,QAAI,CAAC,cAAe,kBAAkB,QAAQ,CAAC,eAAgB;AAC9D,wBAAkB,UAAU,KAAK;AAAA,IACpC;AAAA,EACA;AAEC,SAAO;AACR;AAMA,SAAS,gBAAgB,OAAOA,SAAQ;AAEvC,MAAI,UAAUA;AAEd,SAAO,YAAY,MAAM;AACxB,SAAK,QAAQ,IAAI,qBAAqB,GAAG;AACxC,UAAI;AAEH,gBAAQ,GAAG,KAAK;AAChB;AAAA,MACJ,QAAW;AAEP,gBAAQ,KAAK;AAAA,MACjB;AAAA,IACA;AAEE,cAAU,QAAQ;AAAA,EACpB;AAEC,sBAAoB;AACpB,QAAM;AACP;AAKA,SAAS,qBAAqBA,SAAQ;AACrC,UACEA,QAAO,IAAI,eAAe,MAC1BA,QAAO,WAAW,SAASA,QAAO,OAAO,IAAI,qBAAqB;AAErE;AAYO,SAAS,aAAa,OAAOA,SAAQ,iBAAiBG,oBAAmB;AAC/E,MAAI,mBAAmB;AACtB,QAAI,oBAAoB,MAAM;AAC7B,0BAAoB;AAAA,IACvB;AAEE,QAAI,qBAAqBH,OAAM,GAAG;AACjC,YAAM;AAAA,IACT;AAEE;AAAA,EACF;AAEC,MAAI,oBAAoB,MAAM;AAC7B,wBAAoB;AAAA,EACtB;AAOG;AACD,oBAAgB,OAAOA,OAAM;AAC7B;AAAA,EACF;AA4DA;AAOA,SAAS,2CAA2C,QAAQA,SAAQ,QAAQ,GAAG;AAC9E,MAAI,YAAY,OAAO;AACvB,MAAI,cAAc,KAAM;AAExB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,QAAI,WAAW,UAAU,CAAC;AAC1B,SAAK,SAAS,IAAI,aAAa,GAAG;AACjC;AAAA;AAAA,QACyB;AAAA,QACxBA;AAAA,QACA,QAAQ;AAAA,MACR;AAAA,IACJ,WAAaA,YAAW,UAAU;AAC/B,UAAI,UAAU,GAAG;AAChB,0BAAkB,UAAU,KAAK;AAAA,MACjC,YAAW,SAAS,IAAI,WAAW,GAAG;AACtC,0BAAkB,UAAU,WAAW;AAAA,MAC3C;AACG;AAAA;AAAA,QAAuC;AAAA,MAAU;AAAA,IACpD;AAAA,EACA;AACA;AAOO,SAAS,gBAAgB,UAAU;AxBna3B;AwBoad,MAAI,gBAAgB;AACpB,MAAI,wBAAwB;AAC5B,MAAI,4BAA4B;AAChC,MAAI,oBAAoB;AACxB,MAAI,yBAAyB;AAE7B,MAAI,6BAA6B;AACjC,MAAI,sBAAsB;AAC1B,MAAI,QAAQ,SAAS;AAErB;AAAA,EAA0C;AAC1C,iBAAe;AACf,qBAAmB;AACnB,qBAAmB,SAAS,gBAAgB,kBAAkB,IAAI,WAAW;AAC7E,kBAAgB,CAAC,uBAAuB,QAAQ,aAAa;AAE7D,sBAAoB,SAAS;AAC7B,eAAa;AACb;AAEA,MAAI;AACH,QAAI;AAAA;AAAA,OAAkC,GAAG,SAAS,IAAK;AAAA;AACvD,QAAI,OAAO,SAAS;AAEpB,QAAI,aAAa,MAAM;AACtB,UAAI;AAEJ,uBAAiB,UAAU,YAAY;AAEvC,UAAI,SAAS,QAAQ,eAAe,GAAG;AACtC,aAAK,SAAS,eAAe,SAAS;AACtC,aAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACrC,eAAK,eAAe,CAAC,IAAI,SAAS,CAAC;AAAA,QACxC;AAAA,MACA,OAAU;AACN,iBAAS,OAAO,OAAO;AAAA,MAC3B;AAEG,UAAI,CAAC,eAAe;AACnB,aAAK,IAAI,cAAc,IAAI,KAAK,QAAQ,KAAK;AAC5C,YAAC,UAAK,CAAC,GAAE,cAAR,GAAQ,YAAc,CAAE,IAAE,KAAK,QAAQ;AAAA,QAC7C;AAAA,MACA;AAAA,IACG,WAAU,SAAS,QAAQ,eAAe,KAAK,QAAQ;AACvD,uBAAiB,UAAU,YAAY;AACvC,WAAK,SAAS;AAAA,IACjB;AAKE,QACC,SAAU,KACV,qBAAqB,SACpB,SAAS,KAAK,UAAU,cAAc,YAAY,GAClD;AACD,WAAK,IAAI,GAAG;AAAA,MAA6B,iBAAkB,QAAQ,KAAK;AACvE;AAAA,UACC,iBAAiB,CAAC;AAAA;AAAA,UACK;AAAA,QACvB;AAAA,MACL;AAAA,IACA;AAME,QAAI,sBAAsB,MAAM;AAC/B;AAAA,IACH;AAEE,WAAO;AAAA,EACT,UAAW;AACT,eAAW;AACX,mBAAe;AACf,uBAAmB;AACnB,sBAAkB;AAClB,oBAAgB;AAEhB,wBAAoB;AACpB,iBAAa;AAAA,EACf;AACA;AAQA,SAAS,gBAAgB,QAAQ,YAAY;AAC5C,MAAI,YAAY,WAAW;AAC3B,MAAI,cAAc,MAAM;AACvB,QAAI,QAAQ,SAAS,KAAK,WAAW,MAAM;AAC3C,QAAI,UAAU,IAAI;AACjB,UAAI,aAAa,UAAU,SAAS;AACpC,UAAI,eAAe,GAAG;AACrB,oBAAY,WAAW,YAAY;AAAA,MACvC,OAAU;AAEN,kBAAU,KAAK,IAAI,UAAU,UAAU;AACvC,kBAAU,IAAK;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AAGC,MACC,cAAc,SACb,WAAW,IAAI,aAAa;AAAA;AAAA;AAAA,GAI5B,aAAa,QAAQ,CAAC,SAAS,SAAS,UAAU,IAClD;AACD,sBAAkB,YAAY,WAAW;AAGzC,SAAK,WAAW,KAAK,UAAU,mBAAmB,GAAG;AACpD,iBAAW,KAAK;AAAA,IACnB;AACE;AAAA;AAAA,MAA0C;AAAA,MAAa;AAAA,IAAC;AAAA,EAC1D;AACA;AAOO,SAAS,iBAAiB,QAAQ,aAAa;AACrD,MAAI,eAAe,OAAO;AAC1B,MAAI,iBAAiB,KAAM;AAE3B,WAAS,IAAI,aAAa,IAAI,aAAa,QAAQ,KAAK;AACvD,oBAAgB,QAAQ,aAAa,CAAC,CAAC;AAAA,EACzC;AACA;AAMO,SAAS,cAAcA,SAAQ;AACrC,MAAI,QAAQA,QAAO;AAEnB,OAAK,QAAQ,eAAe,GAAG;AAC9B;AAAA,EACF;AAEC,oBAAkBA,SAAQ,KAAK;AAE/B,MAAI,kBAAkB;AACtB,MAAI,6BAA6B;AAEjC,kBAAgBA;AAOhB,MAAI;AACH,SAAK,QAAQ,kBAAkB,GAAG;AACjC,oCAA8BA,OAAM;AAAA,IACvC,OAAS;AACN,8BAAwBA,OAAM;AAAA,IACjC;AACE,4BAAwBA,OAAM;AAE9B,4BAAwBA,OAAM;AAC9B,QAAI,WAAW,gBAAgBA,OAAM;AACrC,IAAAA,QAAO,WAAW,OAAO,aAAa,aAAa,WAAW;AAC9D,IAAAA,QAAO,KAAK;AAEZ,QAAI,OAAOA,QAAO;AAMpB,QAAA;AAAE,QAAI,OAAO,sBAAsBA,QAAO,IAAI,WAAW,KAAK,SAAS,KAAM;AAW3E,QAAI,IAAK;AAAA,EAGT,SAAQ,OAAO;AACf,iBAAa,OAAOA,SAAQ,iBAAiB,8BAA8BA,QAAO,GAAG;AAAA,EACvF,UAAW;AACT,oBAAgB;AAAA,EAKlB;AACA;AAWA,SAAS,sBAAsB;AAC9B,MAAI,cAAc,KAAM;AACvB,kBAAc;AACd,QAAI;AACHI,mCAAgC;AAAA,IAChC,SAAQ,OAAO;AASf,UAAI,0BAA0B,MAAM;AAS5B;AACN,uBAAa,OAAO,uBAAuB,IAAU;AAAA,QAC1D;AAAA,MACA,OAAU;AAIN,cAAM;AAAA,MACV;AAAA,IACA;AAAA,EACA;AACC;AACD;AAMA,SAAS,0BAA0B,cAAc;AAChD,MAAI,SAAS,aAAa;AAC1B,MAAI,WAAW,GAAG;AACjB;AAAA,EACF;AACC,sBAAqB;AAErB,MAAI,6BAA6B;AACjC,uBAAqB;AAErB,MAAI;AACH,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAIJ,UAAS,aAAa,CAAC;AAE3B,WAAKA,QAAO,IAAI,WAAW,GAAG;AAC7B,QAAAA,QAAO,KAAK;AAAA,MAChB;AAGG,UAAI,oBAAoB,CAAE;AAE1B,sBAAgBA,SAAQ,iBAAiB;AACzC,2BAAqB,iBAAiB;AAAA,IACzC;AAAA,EACA,UAAW;AACT,yBAAqB;AAAA,EACvB;AACA;AAMA,SAAS,qBAAqB,SAAS;AACtC,MAAI,SAAS,QAAQ;AACrB,MAAI,WAAW,EAAG;AAElB,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,QAAIA,UAAS,QAAQ,CAAC;AAEtB,SAAKA,QAAO,KAAK,YAAY,YAAY,GAAG;AAC3C,UAAI;AACH,YAAI,gBAAgBA,OAAM,GAAG;AAC5B,wBAAcA,OAAM;AAOpB,cAAIA,QAAO,SAAS,QAAQA,QAAO,UAAU,QAAQA,QAAO,gBAAgB,MAAM;AACjF,gBAAIA,QAAO,aAAa,MAAM;AAE7B,4BAAcA,OAAM;AAAA,YAC3B,OAAa;AAEN,cAAAA,QAAO,KAAK;AAAA,YACnB;AAAA,UACA;AAAA,QACA;AAAA,MACI,SAAQ,OAAO;AACf,qBAAa,OAAOA,SAAQ,MAAMA,QAAO,GAAG;AAAA,MAChD;AAAA,IACA;AAAA,EACA;AACA;AAEA,SAAS,mBAAmB;AAC3B,yBAAuB;AACvB,MAAI,cAAc,MAAM;AACvB;AAAA,EACF;AACC,QAAM,+BAA+B;AACrC,wBAAsB,CAAE;AACxB,4BAA0B,4BAA4B;AAEtD,MAAI,CAAC,sBAAsB;AAC1B,kBAAc;AACd,4BAAwB;AAAA,EAI1B;AACA;AAMO,SAAS,gBAAgB,QAAQ;AACC;AACvC,QAAI,CAAC,sBAAsB;AAC1B,6BAAuB;AACvB,qBAAe,gBAAgB;AAAA,IAClC;AAAA,EACA;AAEC,0BAAwB;AAExB,MAAIA,UAAS;AAEb,SAAOA,QAAO,WAAW,MAAM;AAC9B,IAAAA,UAASA,QAAO;AAChB,QAAI,QAAQA,QAAO;AAEnB,SAAK,SAAS,cAAc,oBAAoB,GAAG;AAClD,WAAK,QAAQ,WAAW,EAAG;AAC3B,MAAAA,QAAO,KAAK;AAAA,IACf;AAAA,EACA;AAEC,sBAAoB,KAAKA,OAAM;AAChC;AAaA,SAAS,gBAAgBA,SAAQ,mBAAmB;AACnD,MAAI,iBAAiBA,QAAO;AAC5B,MAAI,UAAU,CAAE;AAEhB,YAAW,QAAO,mBAAmB,MAAM;AAC1C,QAAI,QAAQ,eAAe;AAC3B,QAAI,aAAa,QAAQ,mBAAmB;AAC5C,QAAI,sBAAsB,cAAc,QAAQ,WAAW;AAC3D,QAAIE,WAAU,eAAe;AAE7B,QAAI,CAAC,wBAAwB,QAAQ,WAAW,GAAG;AAClD,WAAK,QAAQ,mBAAmB,GAAG;AAClC,YAAI,WAAW;AACd,yBAAe,KAAK;AAAA,QACzB,OAAW;AACN,cAAI;AACH,gBAAI,gBAAgB,cAAc,GAAG;AACpC,4BAAc,cAAc;AAAA,YACnC;AAAA,UACM,SAAQ,OAAO;AACf,yBAAa,OAAO,gBAAgB,MAAM,eAAe,GAAG;AAAA,UAClE;AAAA,QACA;AAEI,YAAIN,SAAQ,eAAe;AAE3B,YAAIA,WAAU,MAAM;AACnB,2BAAiBA;AACjB;AAAA,QACL;AAAA,MACI,YAAW,QAAQ,YAAY,GAAG;AAClC,gBAAQ,KAAK,cAAc;AAAA,MAC/B;AAAA,IACA;AAEE,QAAIM,aAAY,MAAM;AACrB,UAAI,SAAS,eAAe;AAE5B,aAAO,WAAW,MAAM;AACvB,YAAIF,YAAW,QAAQ;AACtB,gBAAM;AAAA,QACX;AACI,YAAI,iBAAiB,OAAO;AAC5B,YAAI,mBAAmB,MAAM;AAC5B,2BAAiB;AACjB,mBAAS;AAAA,QACd;AACI,iBAAS,OAAO;AAAA,MACpB;AAAA,IACA;AAEE,qBAAiBE;AAAA,EACnB;AAIC,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,IAAAN,SAAQ,QAAQ,CAAC;AACjB,sBAAkB,KAAKA,MAAK;AAC5B,oBAAgBA,QAAO,iBAAiB;AAAA,EAC1C;AACA;AAoOO,SAAS,QAAQ,IAAI;AAC3B,MAAI,sBAAsB;AAC1B,MAAI;AACH,iBAAa;AACb,WAAO,GAAI;AAAA,EACb,UAAW;AACT,iBAAa;AAAA,EACf;AACA;AAEA,MAAM,cAAc;AAOb,SAAS,kBAAkB,QAAQ,QAAQ;AACjD,SAAO,IAAK,OAAO,IAAI,cAAe;AACvC;AA8JO,SAAS,KAAK,OAAO,QAAQ,OAAO,IAAI;AAC9C,sBAAoB;AAAA,IACnB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACH;AAgBF;AAOO,SAAS,IAAI,WAAW;AAC9B,QAAM,qBAAqB;AAC3B,MAAI,uBAAuB,MAAM;AAIhC,UAAM,oBAAoB,mBAAmB;AAC7C,QAAI,sBAAsB,MAAM;AAC/B,UAAI,kBAAkB;AACtB,UAAI,oBAAoB;AACxB,yBAAmB,IAAI;AACvB,UAAI;AACH,iBAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AAClD,cAAI,mBAAmB,kBAAkB,CAAC;AAC1C,4BAAkB,iBAAiB,MAAM;AACzC,8BAAoB,iBAAiB,QAAQ;AAC7C,iBAAO,iBAAiB,EAAE;AAAA,QAC/B;AAAA,MACA,UAAa;AACT,0BAAkB,eAAe;AACjC,4BAAoB,iBAAiB;AAAA,MACzC;AAAA,IACA;AACE,wBAAoB,mBAAmB;AAIvC,uBAAmB,IAAI;AAAA,EACzB;AAGC;AAAA;AAAA,IAAsC,CAAA;AAAA;AACvC;ACpyCO,MAAM,wBAAwB,oBAAI,IAAK;AAGvC,MAAM,qBAAqB,oBAAI,IAAK;AA+HpC,SAAS,yBAAyB,OAAO;AzBlJjC;AyBmJd,MAAI,kBAAkB;AACtB,MAAI;AAAA;AAAA,IAAsC,gBAAiB;AAAA;AAC3D,MAAI,aAAa,MAAM;AACvB,MAAI,SAAO,WAAM,iBAAN,mCAA0B,CAAE;AACvC,MAAI;AAAA;AAAA,IAAgD,KAAK,CAAC,KAAK,MAAM;AAAA;AAMrE,MAAI,WAAW;AAGf,MAAI,aAAa,MAAM;AAEvB,MAAI,YAAY;AACf,QAAI,SAAS,KAAK,QAAQ,UAAU;AACpC,QACC,WAAW,OACV,oBAAoB,YAAY;AAAA,IAAwC,SACxE;AAKD,YAAM,SAAS;AACf;AAAA,IACH;AAOE,QAAI,cAAc,KAAK,QAAQ,eAAe;AAC9C,QAAI,gBAAgB,IAAI;AAGvB;AAAA,IACH;AAEE,QAAI,UAAU,aAAa;AAC1B,iBAAW;AAAA,IACd;AAAA,EACA;AAEC;AAAA,EAAyC,KAAK,QAAQ,KAAK,MAAM;AAIjE,MAAI,mBAAmB,gBAAiB;AAGxC,kBAAgB,OAAO,iBAAiB;AAAA,IACvC,cAAc;AAAA,IACd,MAAM;AACL,aAAO,kBAAkB;AAAA,IAC5B;AAAA,EACA,CAAE;AAOD,MAAI,oBAAoB;AACxB,MAAI,kBAAkB;AACtB,sBAAoB,IAAI;AACxB,oBAAkB,IAAI;AAEtB,MAAI;AAIH,QAAI;AAIJ,QAAI,eAAe,CAAE;AAErB,WAAO,mBAAmB,MAAM;AAE/B,UAAI,iBACH,eAAe,gBACf,eAAe;AAAA,MACK,eAAgB,QACpC;AAED,UAAI;AAEH,YAAI,YAAY,eAAe,OAAO,UAAU;AAEhD,YAAI,cAAc,UAAa;AAAA,QAAsB,eAAgB,UAAW;AAC/E,cAAI,SAAS,SAAS,GAAG;AACxB,gBAAI,CAAC,IAAI,GAAG,IAAI,IAAI;AACpB,eAAG,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC;AAAA,UAC/C,OAAY;AACN,sBAAU,KAAK,gBAAgB,KAAK;AAAA,UAC1C;AAAA,QACA;AAAA,MACI,SAAQ,OAAO;AACf,YAAI,aAAa;AAChB,uBAAa,KAAK,KAAK;AAAA,QAC5B,OAAW;AACN,wBAAc;AAAA,QACnB;AAAA,MACA;AACG,UAAI,MAAM,gBAAgB,mBAAmB,mBAAmB,mBAAmB,MAAM;AACxF;AAAA,MACJ;AACG,uBAAiB;AAAA,IACpB;AAEE,QAAI,aAAa;AAChB,eAAS,SAAS,cAAc;AAE/B,uBAAe,MAAM;AACpB,gBAAM;AAAA,QACX,CAAK;AAAA,MACL;AACG,YAAM;AAAA,IACT;AAAA,EACA,UAAW;AAET,UAAM,SAAS;AAEf,WAAO,MAAM;AACb,wBAAoB,iBAAiB;AACrC,sBAAkB,eAAe;AAAA,EACnC;AACA;ACpRO,SAAS,0BAA0B,MAAM;AAC/C,MAAI,OAAO,SAAS,cAAc,UAAU;AAC5C,OAAK,YAAY;AACjB,SAAO,KAAK;AACb;ACMO,SAAS,aAAa,OAAO,KAAK;AACxC,MAAII;AAAA;AAAA,IAAgC;AAAA;AACpC,MAAIA,QAAO,gBAAgB,MAAM;AAChC,IAAAA,QAAO,cAAc;AACrB,IAAAA,QAAO,YAAY;AAAA,EACrB;AACA;AAAA;AAQO,SAAS,SAAS,SAAS,OAAO;AAExC,MAAI,mBAAmB,QAAQ,8BAA8B;AAG7D,MAAI;AAMJ,MAAI,YAAY,CAAC,QAAQ,WAAW,KAAK;AAEzC,SAAO,MAAM;AAMZ,QAAI,SAAS,QAAW;AACvB,aAAO,0BAA0B,YAAY,UAAU,QAAQ,OAAO;AAAA,IAEzE;AAEE,QAAI;AAAA;AAAA,MACH,kBAAkB,SAAS,WAAW,MAAM,IAAI,IAAI,KAAK,UAAU,IAAI;AAAA;AAGvD;AAChB,UAAI;AAAA;AAAA,QAAqC,gCAAgB,KAAK;AAAA;AAC9D,UAAI;AAAA;AAAA,QAAmC,MAAM;AAAA;AAE7C,mBAAa,OAAO,GAAG;AAAA,IAC1B;AAIE,WAAO;AAAA,EACP;AACF;AA6KO,SAAS,OAAO,QAAQ,KAAK;AAOnC,MAAI,WAAW,MAAM;AAEpB;AAAA,EACF;AAEC,SAAO;AAAA;AAAA,IAA4B;AAAA,EAAK;AACzC;ACpLO,SAAS,MAAM,WAAW,SAAS;AACzC,SAAO,OAAO,WAAW,OAAO;AACjC;AAsFA,MAAM,qBAAqB,oBAAI,IAAK;AAQpC,SAAS,OAAO,WAAW,EAAE,QAAQ,QAAQ,QAAQ,CAAE,GAAE,QAAQ,SAAS,QAAQ,KAAI,GAAI;AACzF,kBAAiB;AAEjB,MAAI,oBAAoB,oBAAI,IAAK;AAGjC,MAAI,eAAe,CAACK,YAAW;AAC9B,aAAS,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK;AACvC,UAAI,aAAaA,QAAO,CAAC;AAEzB,UAAI,kBAAkB,IAAI,UAAU,EAAG;AACvC,wBAAkB,IAAI,UAAU;AAEhC,UAAI,UAAU,iBAAiB,UAAU;AAKzC,aAAO,iBAAiB,YAAY,0BAA0B,EAAE,QAAO,CAAE;AAEzE,UAAI,IAAI,mBAAmB,IAAI,UAAU;AAEzC,UAAI,MAAM,QAAW;AAGpB,iBAAS,iBAAiB,YAAY,0BAA0B,EAAE,QAAO,CAAE;AAC3E,2BAAmB,IAAI,YAAY,CAAC;AAAA,MACxC,OAAU;AACN,2BAAmB,IAAI,YAAY,IAAI,CAAC;AAAA,MAC5C;AAAA,IACA;AAAA,EACE;AAED,eAAa,WAAW,qBAAqB,CAAC;AAC9C,qBAAmB,IAAI,YAAY;AAInC,MAAI,YAAY;AAEhB,MAAI,UAAU,eAAe,MAAM;AAClC,QAAI,cAAc,UAAU,OAAO,YAAY,YAAW,CAAE;AAE5D,WAAO,MAAM;AACZ,UAAI,SAAS;AACZ,aAAK,CAAA,CAAE;AACP,YAAI;AAAA;AAAA,UAAuC;AAAA;AAC3C,YAAI,IAAI;AAAA,MACZ;AAEG,UAAI,QAAQ;AAEQ,QAAC,MAAO,WAAW;AAAA,MAC1C;AAQG,kBAAY,UAAU,aAAa,KAAK,KAAK,CAAE;AAO/C,UAAI,SAAS;AACZ,YAAK;AAAA,MACT;AAAA,IACA,CAAG;AAED,WAAO,MAAM;A5B/OA;A4BgPZ,eAAS,cAAc,mBAAmB;AACzC,eAAO,oBAAoB,YAAY,wBAAwB;AAE/D,YAAI;AAAA;AAAA,UAA2B,mBAAmB,IAAI,UAAU;AAAA;AAEhE,YAAI,EAAE,MAAM,GAAG;AACd,mBAAS,oBAAoB,YAAY,wBAAwB;AACjE,6BAAmB,OAAO,UAAU;AAAA,QACzC,OAAW;AACN,6BAAmB,IAAI,YAAY,CAAC;AAAA,QACzC;AAAA,MACA;AAEG,yBAAmB,OAAO,YAAY;AAEtC,UAAI,gBAAgB,QAAQ;AAC3B,0BAAY,eAAZ,mBAAwB,YAAY;AAAA,MACxC;AAAA,IACG;AAAA,EACH,CAAE;AAED,qBAAmB,IAAI,WAAW,OAAO;AACzC,SAAO;AACR;AAMA,IAAI,qBAAqB,oBAAI,QAAS;ACtP/B,SAAS,QAAQ,IAAI;AAC3B,MAAI,sBAAsB,MAAM;AAC/B,gCAAqC;AAAA,EACvC;AAIQ;AACN,gBAAY,MAAM;AACjB,YAAM,UAAU,QAAQ,EAAE;AAC1B,UAAI,OAAO,YAAY,WAAY;AAAA;AAAA,QAAkC;AAAA;AAAA,IACxE,CAAG;AAAA,EACH;AACA;ACpCO,SAAS,kBAAkB,iBAAiB,aAAa,OAAO,MAAM;AAEzE,cAAY,kBAAkB;AAE9B,QAAM,iBAAiB,IAAI,eAAe,MAAM;AAE5C,QAAG,MAAM;AACL;IACH;AAED,oBAAgB,OAAM;AAAA,EAC9B,CAAK;AAED,iBAAe,QAAQ,WAAW;AAElC,SAAO;AACX;ACPO,SAAS,qBAAqB,qBAAqB,aAAa,OAAO;AAC5E,QAAM;AAAA,IACJ;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAG;AAGJ,MAAI,QAAQ,kBAAkB,qBAAqB,MAAM,YAAY;AAIrE,QAAM,QAAQ,aAAa,KAAK,cAAc;AAE9C,MAAI,QAAQ,gCAAgC,qBAAqB,MAAM,KAAK;AAG5E,sBAAoB,OAAO;AAE3B,QAAM,UAAU,MAAM,CAAC;AACvB,MAAI,CAAC,SAAS;AACZ,QAAI,KAAK,2CAA2C,qBAAqB,IAAI;AAC7E;AAAA,EACD;AAGD,MAAI,CAAC,QAAQ,iBAAiB;AAC5B,UAAM,kBAAkB,IAAI,QAAQ,SAAS;AAAA,MAC3C,cAAc;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,UAAU;AAAA,IAChB,CAAK;AAED,YAAQ,kBAAkB;AAG1B,QAAI,YAAY;AACd,sBAAgB,GAAG,kBAAkB,WAAY;AAAA,MAEvD,CAAO;AAAA,IACF;AAGD,QAAI,gBAAgB,MAAM;AACxB,4BAAsB,mBAAmB;AAAA,IAC/C;AAGI,QAAI,YAAY;AACd,sBAAgB,MAAM;AACpB,8BAAsB,mBAAmB;AACzC,2BAAmB,KAAK,KAAK;AAAA,MACrC;AAAA,IACK;AAGD,wBAAoB,WAAW,kBAAkB,iBAAiB,SAAS,aAAa;AAAA,EACzF;AAGD,MAAI,QAAQ,iBAAiB;AAC3B,YAAQ,gBAAgB;EACzB;AAGD,sBAAoB,SAAS,QAAQ,QAAQ,UAAU;AAEvD,MAAI,QAAQ,uCAAuC,qBAAqB,MAAM,oBAAoB,QAAQ;AAE1G,SAAO,oBAAoB;AAC7B;AAOO,SAAS,sBAAsB,qBAAqB;AACzD,QAAM,EAAE,MAAM,eAAe,mBAAmB,oBAAmB,IAAK;AAExE,MAAI,CAAC,QAAQ,CAAC,KAAK,OAAQ;AAE3B,QAAM,aAAa,KAAK,KAAK,aAAa;AAC1C,QAAM,aAAa,KAAK,KAAK,iBAAiB;AAC9C,QAAM,UAAa,KAAK,KAAK,mBAAmB;AAEhD,MAAI,CAAC,WAAW,UAAU,CAAC,WAAW,OAAQ;AAG9C,QAAM,UAAY,KAAK,CAAC;AACxB,QAAM,WAAY,WAAW,CAAC;AAC9B,QAAM,YAAY,QAAQ,CAAC;AAG3B,QAAM,gBAAkB,WAAW,iBAAiB,QAAQ,UAAU,EAAE,WAAW,KAAK;AACxF,QAAM,cAAkB,QAAQ,WAAW,cAAc,IAAI;AAC7D,QAAM,WAAkB,WAAW,iBAAiB,SAAS,EAAE,KAAK;AACpE,QAAM,iBAAkB,WAAW,iBAAiB,WAAW,CAAC,CAAC,EAAE,QAAQ;AAG3E,MAAI,cAAc,KAAK,OAAO,cAAc,aAAa,iBAAiB,SAAS;AACnF,gBAAc,KAAK,IAAI,aAAa,CAAC;AAGrC,QAAM,qBAAsB,YAAY,cAAc;AACtD,QAAM,eAAuB,cAAc,sBAAsB;AACjE,QAAM,sBAAsB,KAAK,MAAM,WAAW;AAIlD,aAAW,QAAO,EAAG,QAAQ,CAAC,SAAS;AACrC,SAAK,MAAM,QAAQ,GAAG,mBAAmB;AAAA,EAC7C,CAAG;AAGD,WAAS,MAAM,QAAQ,GAAG,mBAAmB;AAG7C,MAAI,QAAQ,iBAAiB;AAC3B,YAAQ,gBAAgB;EACzB;AACH;AAOA,SAAS,mBAAmB,KAAK,OAAO;A/B7IzB;A+B8Ib,QAAM,eAAa,SAAI,aAAJ,mBAAc,UAAS;AAC1C,QAAM,WAAa;AAGnB,QAAM,aAAc,MAAM;AAC1B,QAAM,cAAc,OAAO;AAG3B,MAAI,cAAc;AAClB,MAAI,aAAa,aAAa;AAC5B,kBAAc;AAAA,EAClB,WAAa,aAAa,YAAY;AAClC,kBAAc;AAAA,EACf;AAGD,QAAM,qBAAqB,EAAE,OAAO,KAAK,QAAQ,IAAI,MAAM;AAC3D,QAAM,cAAqB,mBAAmB,WAAW;AAGzD,QAAM,UAAU,MAAM,CAAC;AACvB,UAAQ,MAAM,YAAY,kBAAkB,GAAG,WAAW,GAAG;AAG7D,QAAM,WAAa,MAAM,KAAK,sBAAsB;AACpD,QAAM,aAAa,MAAM,KAAK,wBAAwB;AAGtD,QAAM,eAAiB,SAAS;AAChC,QAAM,iBAAiB,WAAW;AAGlC,UAAQ,aAAW;AAAA,IACjB,KAAK;AACH,mBAAa,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,qBAAqB;AACjE,qBAAe,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,qBAAqB;AACnE;AAAA,IACF,KAAK;AACH,mBAAa,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,sCAAsC;AAClF,qBAAe,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,qBAAqB;AACnE;AAAA,IACF,KAAK;AACH,mBAAa,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,sCAAsC;AAClF,qBAAe,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,sCAAsC;AACpF;AAAA,EACH;AACH;AC1LO,SAAS,wBAAwB,qBAAqB;AhCF9C;AgCIX,QAAM,QAAQ,oBAAoB,IAAI;AAEtC,MAAI,MAAM,0BAA0B;AAChC,UAAM,yBAAyB;AAC/B,UAAM,2BAA2B;AAAA,EACpC;AAED,cAAM,6BAAN,mBAAgC;AAChC,QAAM,2BAA2B,qBAAqB,qBAAqB,IAAI;AACnF;;;;ACLM,MAAA,oBAAY;AACL,kCAAO,SAAQ;AACtB,MAAA,OAAO,KAAK,KAAK,wBAAgB,IAAI;AAEzC,gBAAc;UAEN,OAAI;AAAA,MACR,cAAY,QAAA;AAAA,MACZ,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,qBAAqB;AAAA,MACrB,UAAU,MAAM;AAAA,MAChB,KAAG,QAAA;AAAA;AAGL,4BAAwB,IAAU;AAElC,QAAI,QAAQ,8BAA8B,0BAA0B;AAAA,GACrE;;;;;;mBAMU;;;;;qBASA;;;;;qBASA;;;;;qBASA;;;;;qBASA;;;;;qBASA;;;;;qBASA;;;;AClFN,SAAS,oBAAoB,KAAK,MAAM,MAAM;AACnD,MAAI,EAAE,eAAe,qBAAsB;AAE3C,MAAI,KAAK,cAAc,oBAAoB,IAAI;AAG/C,QAAM,YAAY,SAAS,cAAc,iBAAiB;AAE1D,YAAU,YAAY;AAEtB,MAAI,YAAY,MAAM,mBAAmB;AAAA,IACrC,QAAQ;AAAA,IACR,OAAO;AAAA,MACL;AAAA,MACA,QAAQ,OAAO;AAAA,MACf,cAAc;AAAA,IACf;AAAA,EACP,CAAK;AAEH,MAAI,QAAQ,0BAA0B,oBAAoB,IAAI;AAChE;AAEO,SAAS,qBAAqB,KAAK;AlC3B3B;AkC4Bb,MAAI,EAAE,eAAe,qBAAsB;AAE3C,MAAI,IAAI,WAAW;AACjB,YAAQ,KAAK,SAAS,oBAAoB,MAAM,IAAI,MAAM,wBAAwB;AAElF,cAAI,MAAM,6BAAV,mBAAoC;AACpC,QAAI,MAAM,2BAA2B;AAErC,YAAQ,KAAK,kCAAkC,oBAAoB,IAAI;AACvE,QAAI,UAAU;AACd,QAAI,YAAY;AAEhB,YAAQ,KAAK,yBAAyB,oBAAoB,IAAI;AAAA,EAC/D;AACH;ACjCA,MAAM,QAAQ;AAAA,EACZ,2BAA2B;AAAA,EAC3B,0BAA0B;AAAA,EAC1B,MAAM;AAAA,EACN,OAAO;AACT;AAEA,SAAS,gBAAgB;AAEvB,QAAM,GAAG,MAAM,2BAA2B,mBAAmB;AAC7D,QAAM,GAAG,MAAM,0BAA0B,oBAAoB;AAE7D,QAAM,GAAG,oBAAoB,CAAC,KAAK,MAAM,SAAS;AAChD,YAAQ,IAAI,kCAAkC;AAAA,MAC5C,OAAO,IAAI;AAAA,MACX,OAAO,IAAI,YAAY;AAAA,MACvB,WAAW,IAAI,MAAM;AAAA,IAC3B,CAAK;AAAA,EACL,CAAG;AAED,QAAM,GAAG,oBAAoB,CAAC,QAAQ;AACpC,YAAQ,IAAI,eAAe,IAAI,MAAM,IAAI;AAAA,EAC7C,CAAG;AAED,QAAM,GAAG,6BAA6B,CAAC,KAAK,MAAM,SAAS;AACzD,YAAQ,IAAI,2CAA2C;AAAA,MACrD,OAAO,IAAI;AAAA,MACX,OAAO,IAAI,YAAY;AAAA,MACvB,WAAW,IAAI,MAAM;AAAA,IAC3B,CAAK;AAAA,EACL,CAAG;AAGD,QAAM,KAAK,MAAM,MAAM,MAAM;AAE3B,YAAQ,IAAI,8CAA8C;AAE1D,WAAO,OAAO;AAEd,WAAO,gBAAgB,QAAQ,UAAU;AAEzC,WAAO,MAAM,aAAa;AAAA,MACxB,aAAa;AAAA,IACnB;AAEI,WAAO,cAAc,QAAQ,qBAAqB,EAAE,OAAO,CAAC,WAAW,GAAG,aAAa,KAAI,CAAE;AAE7F,QAAI,QAAQ,oBAAoB,SAAS;AACzC,QAAI,QAAQ,4BAA4B,SAAS;AAAA,EAErD,CAAG;AACH;AAEA,cAAe;","x_google_ignoreList":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}