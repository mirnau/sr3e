name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update manifest URLs
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        REPO_URL="https://github.com/mirnau/sr3e"
        RAW_URL="https://raw.githubusercontent.com/mirnau/sr3e"
        
        # Update system.json with new URLs
        jq --arg ver "$VERSION" \
           --arg manifest "$RAW_URL/v$VERSION/system.json" \
           --arg download "$REPO_URL/releases/download/v$VERSION/sr3e-$VERSION.zip" \
           '.version = $ver | .manifest = $manifest | .download = $download' \
           system.json > system.json.tmp && mv system.json.tmp system.json
    
    - name: Build project
      run: npm run build
    
    - name: Create release archive
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        # Create clean directory structure
        mkdir release
        
        # Copy only necessary files for the system
        cp system.json release/
        cp -r build/ release/
        cp -r themes/ release/
        cp -r lang/ release/
        cp -r textures/ release/
        cp -r fonts/ release/
        cp -r licences/ release/
        cp README.md release/
        cp CHANGELOG.md release/
        
        # Create zip from release directory
        cd release && zip -r "../sr3e-${VERSION}.zip" .
    
    - name: Create GitHub Release
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        MANIFEST_URL="https://raw.githubusercontent.com/mirnau/sr3e/v${VERSION}/system.json"
        
        # Create release with manifest URL in description
        gh release create "v${VERSION}" \
          "sr3e-${VERSION}.zip" \
          --title "Release v${VERSION}" \
          --notes "**Foundry VTT Manifest URL:**
        \`${MANIFEST_URL}\`
        
        ---
        
        $(gh api repos/:owner/:repo/releases/generate-notes -f tag_name="v${VERSION}" --jq '.body')"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
