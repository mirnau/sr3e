name: Create Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: version
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      # Build the ZIP from the tagged commit, and ensure the bundled system.json
      # contains the correct version + download URL. The manifest stays stable (main).
      - name: Update system.json for packaged build
        shell: bash
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          REPO_URL="https://github.com/mirnau/sr3e"
          RAW_URL="https://raw.githubusercontent.com/mirnau/sr3e"

          jq --arg ver "$VERSION" \
             --arg manifest "$RAW_URL/main/system.json" \
             --arg download "$REPO_URL/releases/download/v$VERSION/sr3e-$VERSION.zip" \
             '.version = $ver
              | .manifest = $manifest
              | .download = $download' \
             system.json > system.json.tmp && mv system.json.tmp system.json

      - name: Build project
        run: npm run build

      - name: Create release archive
        shell: bash
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          zip -r "sr3e-${VERSION}.zip" . \
            -x "node_modules/*" ".git/*" "*.zip"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: sr3e-${{ steps.version.outputs.VERSION }}.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Keep the manifest URL stable by updating system.json on main
      # so Foundry can always fetch the current version.
      - name: Update system.json on main (bump version + download)
        shell: bash
        run: |
          set -e
          VERSION="${{ steps.version.outputs.VERSION }}"
          REPO_URL="https://github.com/mirnau/sr3e"
          RAW_URL="https://raw.githubusercontent.com/mirnau/sr3e"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure we have the latest main, switch to it, and update system.json there
          git fetch origin main
          git checkout main
          git pull --ff-only origin main

          jq --arg ver "$VERSION" \
             --arg manifest "$RAW_URL/main/system.json" \
             --arg download "$REPO_URL/releases/download/v$VERSION/sr3e-$VERSION.zip" \
             '.version = $ver
              | .manifest = $manifest
              | .download = $download' \
             system.json > system.json.tmp && mv system.json.tmp system.json

          git add system.json
          # Only commit if there is a change
          if ! git diff --cached --quiet; then
            git commit -m "chore(release): bump system.json to v${VERSION}"
            git push origin main
          fi
